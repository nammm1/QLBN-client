import React, { useState } from "react";
import "./MedicalRecords.css";

const MedicalRecords = () => {
  const [activeTab, setActiveTab] = useState("benh-an");
  const [selectedNutrition, setSelectedNutrition] = useState(null);
  const [selectedMedical, setSelectedMedical] = useState(null);

  // Th√¥ng tin b·ªánh nh√¢n
  const personalInfo = {
    ho_ten: "Nguy·ªÖn VƒÉn A",
    sdt: "0909123456",
    tuoi: 30,
    gioi_tinh: "Nam",
    dan_toc: "Kinh",
    BHYT: "123456789",
    dia_chi: "123 ƒê∆∞·ªùng ABC, Qu·∫≠n 1, TP.HCM",
  };

  // H·ªì s∆° b·ªánh √°n
  const medicalData = [
    {
      thoi_gian_tao: "2024-10-01",
      bac_si: "BS. Nguy·ªÖn VƒÉn A",
      ly_do_kham: "ƒêau h·ªçng, s·ªët",
      chuan_doan: "Vi√™m h·ªçng c·∫•p",
      ket_qua_cls: "X√©t nghi·ªám m√°u: b·∫°ch c·∫ßu tƒÉng",
      tham_do_chuc_nang: "Kh√¥ng c√≥ b·∫•t th∆∞·ªùng",
      dieu_tri: "Kh√°ng sinh + h·∫° s·ªët",
      cham_soc: "Theo d√µi nhi·ªát ƒë·ªô h√†ng ng√†y",
      ghi_chu: "U·ªëng thu·ªëc ƒë·ªß 5 ng√†y",
    },
    {
      thoi_gian_tao: "2024-11-15",
      bac_si: "BS. Tr·∫ßn VƒÉn B",
      ly_do_kham: "Ho k√©o d√†i",
      chuan_doan: "Vi√™m ph·∫ø qu·∫£n",
      ket_qua_cls: "X-quang ph·ªïi: h√¨nh ·∫£nh vi√™m",
      tham_do_chuc_nang: "SpO2: 97%",
      dieu_tri: "Kh√°ng sinh + siro ho",
      cham_soc: "Ngh·ªâ ng∆°i, gi·ªØ ·∫•m",
      ghi_chu: "T√°i kh√°m sau 7 ng√†y",
    },
  ];

  // H·ªì s∆° dinh d∆∞·ª°ng
  const nutritionData = [
    {
      thoi_gian_tao: "2024-09-20",
      chuyen_gia: "CN. L√™ Th·ªã C",
      ly_do_kham: "T∆∞ v·∫•n ch·∫ø ƒë·ªô ƒÉn",
      chuan_doan: "Thi·∫øu m√°u nh·∫π do thi·∫øu s·∫Øt, th·ªÉ tr·∫°ng g·∫ßy",
      ket_qua_cls: "ƒê∆∞·ªùng huy·∫øt: 90 mg/dL, Cholesterol: 180 mg/dL, Thi·∫øu s·∫Øt",
      tham_do_chuc_nang: {
        BMI: "18.5",
        chieu_cao: "170 cm",
        can_nang: "53 kg",
        vong_eo: "72 cm",
        mo_co_the: "20%",
        co: "35 kg",
        nuoc: "55%",
      },
      dieu_tri:
        "TƒÉng protein, b·ªï sung th·ªãt ƒë·ªè, tr·ª©ng, s·ªØa. H·∫°n ch·∫ø th·ª©c ƒÉn nhanh.",
      cham_soc: "Ng·ªß ƒë·ªß 8h, u·ªëng 2 l√≠t n∆∞·ªõc/ng√†y, t·∫≠p th·ªÉ d·ª•c nh·∫π",
      ghi_chu: "Theo d√µi c√¢n n·∫∑ng h√†ng th√°ng",
      calories: "2000 kcal/ng√†y",
      menu: {
        S√°ng: "B√°nh m√¨ + tr·ª©ng",
        Tr∆∞a: "C∆°m + th·ªãt b√≤ + rau xanh",
        Chieu: "Tr√°i c√¢y + s·ªØa chua",
        T·ªëi: "C√° + canh rau",
      },
    },
  ];

  const fieldLabels = {
    BMI: "Ch·ªâ s·ªë BMI",
    chieu_cao: "Chi·ªÅu cao",
    can_nang: "C√¢n n·∫∑ng",
    vong_eo: "V√≤ng eo",
    mo_co_the: "M·ª° c∆° th·ªÉ",
    co: "Kh·ªëi c∆°",
    nuoc: "N∆∞·ªõc trong c∆° th·ªÉ",
  };

  return (
    <div className="container py-5 medical-records">
      <h2 className="text-center mb-4 fw-bold">H·ªì s∆° b·ªánh √°n ƒëi·ªán t·ª≠</h2>

      {/* Tabs */}
      <div className="d-flex justify-content-center mb-4">
        <button
          className={`btn mx-2 ${
            activeTab === "benh-an" ? "btn-primary" : "btn-outline-primary"
          }`}
          onClick={() => setActiveTab("benh-an")}
        >
          H·ªì s∆° b·ªánh √°n
        </button>
        <button
          className={`btn mx-2 ${
            activeTab === "dinh-duong" ? "btn-success" : "btn-outline-success"
          }`}
          onClick={() => setActiveTab("dinh-duong")}
        >
          H·ªì s∆° dinh d∆∞·ª°ng
        </button>
      </div>

      {/* B·∫£ng b·ªánh √°n */}
      {activeTab === "benh-an" && (
        <table className="table table-bordered table-striped">
          <thead className="table-primary">
            <tr>
              <th>Ng√†y kh√°m</th>
              <th>B√°c sƒ©</th>
              <th>L√Ω do kh√°m</th>
              <th>Ch·∫©n ƒëo√°n</th>
            </tr>
          </thead>
          <tbody>
            {medicalData.map((record) => (
              <tr
                key={record.id_ho_so}
                style={{ cursor: "pointer" }}
                onClick={() => setSelectedMedical(record)}
              >
                <td>{record.thoi_gian_tao}</td>
                <td>{record.bac_si}</td>
                <td>{record.ly_do_kham}</td>
                <td>{record.chuan_doan}</td>
              </tr>
            ))}
          </tbody>
        </table>
      )}

      {/* B·∫£ng dinh d∆∞·ª°ng */}
      {activeTab === "dinh-duong" && (
        <table className="table table-bordered table-striped">
          <thead className="table-success">
            <tr>
              <th>Ng√†y t∆∞ v·∫•n</th>
              <th>Chuy√™n gia</th>
              <th>L√Ω do kh√°m</th>
              <th>Ch·∫©n ƒëo√°n</th>
              <th>Nhu c·∫ßu calo</th>
            </tr>
          </thead>
          <tbody>
            {nutritionData.map((record) => (
              <tr
                key={record.id_ho_so}
                style={{ cursor: "pointer" }}
                onClick={() => setSelectedNutrition(record)}
              >
                <td>{record.thoi_gian_tao}</td>
                <td>{record.chuyen_gia}</td>
                <td>{record.ly_do_kham}</td>
                <td>{record.chuan_doan}</td>
                <td>{record.calories}</td>
              </tr>
            ))}
          </tbody>
        </table>
      )}

      {/* Modal chi ti·∫øt b·ªánh √°n */}
      {selectedMedical && (
        <div className="custom-modal">
          <div className="modal-backdrop fade show"></div>
          <div className="modal show d-block">
            <div className="modal-dialog modal-lg">
              <div className="modal-content shadow-lg">
                <div className="modal-header bg-primary text-white">
                  <h5 className="modal-title">
                    ü©∫ H·ªì s∆° b·ªánh √°n - {personalInfo.ho_ten}
                  </h5>
                  <button
                    type="button"
                    className="btn-close"
                    onClick={() => setSelectedMedical(null)}
                  ></button>
                </div>
                <div className="modal-body">
                  <div className="mb-3">
                    <span className="badge bg-secondary me-2">
                      Ng√†y: {selectedMedical.thoi_gian_tao}
                    </span>
                    <span className="badge bg-warning text-dark">
                      B√°c sƒ©: {selectedMedical.bac_si}
                    </span>
                  </div>

                  <h6>Th√¥ng tin c√° nh√¢n</h6>
                  <ul>
                    <li>SƒêT: {personalInfo.sdt}</li>
                    <li>Tu·ªïi: {personalInfo.tuoi}</li>
                    <li>Gi·ªõi t√≠nh: {personalInfo.gioi_tinh}</li>
                    <li>D√¢n t·ªôc: {personalInfo.dan_toc}</li>
                    <li>BHYT: {personalInfo.BHYT}</li>
                    <li>ƒê·ªãa ch·ªâ: {personalInfo.dia_chi}</li>
                  </ul>

                  <h6>L√Ω do kh√°m</h6>
                  <p>{selectedMedical.ly_do_kham}</p>
                  
                  <h6>K·∫øt qu·∫£ c·∫≠n l√¢m s√†ng</h6>
                  <p>{selectedMedical.ket_qua_cls}</p>

                  <h6>ThƒÉm d√≤ ch·ª©c nƒÉng</h6>
                  <p>{selectedMedical.tham_do_chuc_nang}</p>

                  <h6>Ch·∫©n ƒëo√°n</h6>
                  <p>{selectedMedical.chuan_doan}</p>

                  <h6>ƒêi·ªÅu tr·ªã</h6>
                  <p>{selectedMedical.dieu_tri}</p>

                  <h6>ChƒÉm s√≥c & Ghi ch√∫</h6>
                  <p>
                    <strong>ChƒÉm s√≥c:</strong> {selectedMedical.cham_soc}
                  </p>
                  <p>
                    <strong>Ghi ch√∫:</strong> {selectedMedical.ghi_chu}
                  </p>
                </div>
                <div className="modal-footer">
                  <button
                    className="btn btn-secondary"
                    onClick={() => setSelectedMedical(null)}
                  >
                    ƒê√≥ng
                  </button>
                </div>
              </div>
            </div>
          </div>
        </div>
      )}

      {/* Modal chi ti·∫øt dinh d∆∞·ª°ng */}
      {selectedNutrition && (
        <div className="custom-modal">
          <div className="modal-backdrop fade show"></div>
          <div className="modal show d-block">
            <div className="modal-dialog modal-lg">
              <div className="modal-content shadow-lg">
                <div className="modal-header bg-success text-white">
                  <h5 className="modal-title">
                    H·ªì s∆° dinh d∆∞·ª°ng - {personalInfo.ho_ten}
                  </h5>
                  <button
                    type="button"
                    className="btn-close"
                    onClick={() => setSelectedNutrition(null)}
                  ></button>
                </div>
                <div className="modal-body">
                  <div className="mb-3">
                    <span className="badge bg-secondary me-2">
                      Ng√†y: {selectedNutrition.thoi_gian_tao}
                    </span>
                    <span className="badge bg-warning text-dark">
                      Chuy√™n gia: {selectedNutrition.chuyen_gia}
                    </span>
                  </div>

                  <h6>Th√¥ng tin c√° nh√¢n</h6>
                  <ul>
                    <li>SƒêT: {personalInfo.sdt}</li>
                    <li>Tu·ªïi: {personalInfo.tuoi}</li>
                    <li>Gi·ªõi t√≠nh: {personalInfo.gioi_tinh}</li>
                    <li>D√¢n t·ªôc: {personalInfo.dan_toc}</li>
                    <li>BHYT: {personalInfo.BHYT}</li>
                    <li>ƒê·ªãa ch·ªâ: {personalInfo.dia_chi}</li>
                  </ul>

                  <h6>ThƒÉm d√≤ ch·ª©c nƒÉng</h6>
                  <table className="table table-sm table-bordered">
                    <tbody>
                      {Object.entries(selectedNutrition.tham_do_chuc_nang).map(
                        ([key, value]) => (
                          <tr key={key}>
                            <td>
                              <strong>{fieldLabels[key] || key}</strong>
                            </td>
                            <td>{value}</td>
                          </tr>
                        )
                      )}
                    </tbody>
                  </table>

                  <h6>K·∫øt qu·∫£ c·∫≠n l√¢m s√†ng</h6>
                  <p>{selectedNutrition.ket_qua_cls}</p>

                  <h6>Ch·∫©n ƒëo√°n</h6>
                  <p>{selectedNutrition.chuan_doan}</p>

                  <h6>K·∫ø ho·∫°ch dinh d∆∞·ª°ng</h6>
                  <p>{selectedNutrition.dieu_tri}</p>

                  <h6>Nhu c·∫ßu calo</h6>
                  <p>{selectedNutrition.calories}</p>

                  <h6>Th·ª±c ƒë∆°n m·∫´u</h6>
                  <table className="table table-sm table-bordered">
                    <thead>
                      <tr>
                        <th>Bu·ªïi</th>
                        <th>Th·ª±c ƒë∆°n</th>
                      </tr>
                    </thead>
                    <tbody>
                      {Object.entries(selectedNutrition.menu).map(
                        ([key, value]) => (
                          <tr key={key}>
                            <td>{key}</td>
                            <td>{value}</td>
                          </tr>
                        )
                      )}
                    </tbody>
                  </table>

                  <h6>ChƒÉm s√≥c & Ghi ch√∫</h6>
                  <p>
                    <strong>ChƒÉm s√≥c:</strong> {selectedNutrition.cham_soc}
                  </p>
                  <p>
                    <strong>Ghi ch√∫:</strong> {selectedNutrition.ghi_chu}
                  </p>
                </div>
                <div className="modal-footer">
                  <button
                    className="btn btn-secondary"
                    onClick={() => setSelectedNutrition(null)}
                  >
                    ƒê√≥ng
                  </button>
                </div>
              </div>
            </div>
          </div>
        </div>
      )}
    </div>
  );
};

export default MedicalRecords;
